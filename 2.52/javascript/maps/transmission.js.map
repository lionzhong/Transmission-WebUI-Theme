{"version":3,"sources":["transmission.js"],"names":["Transmission","this","initialize","prototype","e","remote","TransmissionRemote","inspector","Inspector","prefsDialog","PrefsDialog","$","bind","proxy","onPrefsDialogClosed","isMenuEnabled","isMobileDevice","filterText","_torrents","_rows","dirtyTorrents","uriCache","Prefs","getClutchPrefs","forceNumeric","click","stopSelectedClicked","startSelectedClicked","stopAllClicked","startAllClicked","removeClicked","openTorrentClicked","togglePrefsDialogClicked","confirmUploadClicked","hideUploadDialog","toggleTurtleClicked","toggleCompactClicked","jQuery","event","props","push","submit","toggleInspector","val","_FilterMode","change","onFilterModeClicked","onFilterTrackerClicked","document","keyDown","keyUp","deselectAll","dragenter","drop","setupSearchBox","createContextMenu","createSettingsMenu","torrent_list","toolbar_buttons","toolbar_pause_button","toolbar_start_button","toolbar_remove_button","elements","initializeSettings","async","loadDaemonPrefs","loadDaemonStats","initializeTorrents","refreshTorrents","togglePeriodicSessionRefresh","updateButtonsSoon","data","o","updateGuiFromSession","sessionProperties","loadImages","row","i","arguments","attr","_SortMethod","selectMenuItem","_SortDirection","_SortDescending","initCompactMode","tr","search_box","setFilterText","value","browser","safari","addClass","is","removeClass","bindings","context_pause_selected","stopSelectedTorrents","context_resume_selected","startSelectedTorrents","context_resume_now_selected","context_remove","removeSelectedTorrents","context_removedata","removeSelectedTorrentsAndData","context_verify","verifySelectedTorrents","context_reannounce","reannounceSelectedTorrents","context_move_top","moveTop","context_move_up","moveUp","context_move_down","moveDown","context_move_bottom","moveBottom","contextMenu","menuStyle","width","backgroundColor","border","padding","textAlign","itemStyle","margin","color","cursor","itemHoverStyle","shadow","boundingElement","boundingRightPad","boundingBottomPad","onContextMenu","ev","element","target","closest","index","isSelected","setSelectedRow","transMenu","selected_char","direction","onClick","onMenuClicked","getAllTorrents","torrents","key","getTorrentIds","map","slice","t","getId","scrollToRow","list","scrollTop","innerHeight","offsetTop","getElement","offsetHeight","outerHeight","seedRatioLimit","p","seedRatioLimited","setPref","setValue","getSelectedRows","grep","r","getSelectedTorrents","getTorrent","getSelectedTorrentIds","children","selectRow","callSelectionChangedSoon","deselectRow","selectAll","_last_torrent_clicked","indexOfLastTorrent","getTorrentId","selectRange","last","next","indexOf","min","Math","max","selectionChanged","updateButtonStates","setTorrents","inspectorIsVisible","clearTimeout","selectionChangedTimer","callback","msec","setTimeout","handled","rows","up","keyCode","dn","shift","length","anchor","_shift_index","shiftKey","isButtonEnabled","srcElement","parentNode","className","hideMobileAddressbar","stopAllTorrents","startAllTorrents","uploadTorrentFile","dataTransfer","types","contains","stopPropagation","preventDefault","dropEffect","uri","uris","paused","shouldAddedTorrentsStart","getData","split","test","addTorrentByUrl","hide","enabled","clearInterval","sessionInterval","setInterval","RPC","_TurtleState","hasClass","savePrefs","close","show","search","trim","refilter","setSortMethod","sort_method","setSortDirection","dir","id","parent","find","each","deselectMenuItem","replace","_UpSpeedLimit","parseInt","innerHTML","_UpSpeedLimited","_DownSpeedLimit","_DownSpeedLimited","showStatsDialog","serverVersion","html","dialog","title","window","open","menuItemIsSelected","_SortAscending","console","log","trigger","stopImmediatePropagation","onTorrentChanged","tor","refilterSoon","updateFromTorrentGet","updates","removed_ids","needed","fields","needinfo","needsMetaData","refresh","Torrent","concat","Fields","Metadata","Stats","updateTorrents","deleteTorrents","ids","_RefreshRate","refreshTorrentsTimeout","onRowClicked","meta_key","metaKey","ctrlKey","currentTarget","startTorrent","stopTorrent","setInspectorVisible","focus","confirmed","args","url","type","X-Transmission-Session-Id","_token","dataType","iframe","ajaxSubmit","promptToRemoveTorrents","promptToRemoveTorrentsAndData","torrent","header","getName","message","confirm","removeTorrents","removeTorrentsAndData","verifyTorrents","reannounceTorrents","force","startTorrents","verifyTorrent","reannounceTorrent","stopTorrents","changeFileCommand","torrentId","rowIndices","command","delaySecs","scroll_timeout","doToolbarHide","scrollTo","moveTorrentsToTop","moveTorrentsUp","moveTorrentsDown","moveTorrentsToBottom","limit","limited","b","text","fmt","menu","version","set","speed","_TurtleUpSpeedLimit","_TurtleDownSpeedLimit","join","toggleClass","deselectMenuSiblings","updateStatusbar","u","d","getUploadSpeed","getDownloadSpeed","speedBps","plural","setEnabled","flag","updateFilterSelect","names","name","str","trackers","getTrackers","sort","filterTracker","domain","filterTrackersStr","buttonRefreshTimer","haveActive","havePaused","haveSel","haveActiveSel","havePausedSel","isStopped","visible","toggle","w","outerWidth","style","right","refilterTimer","sortRows","id2row","sortTorrents","rebuildEverything","tmp","clean_rows","dirty_rows","frag","sort_mode","sort_direction","filter_mode","filter_text","filter_tracker","renderer","torrentRenderer","old_sel_count","empty","detach","TorrentRow","dblclick","ci","cmax","di","dmax","createDocumentFragment","push_clean","c","compareTorrents","insertBefore","appendChild","filter","setFilterMode","mode","tracker","setFilterTracker","getReadableDomain","siblings","getDomainName","host","dot","lastIndexOf","charAt","toUpperCase","ret","j","announce","parseUri","count","setCompactMode","_CompactDisplayState","is_compact","was_compact","onCompactModeChanged","compact","TorrentRendererCompact","TorrentRendererFull","togglePeriodicStatsRefresh","statsInterval","updateStats","stats","s","ratio","uploadedBytes","downloadedBytes","size","ratioString","timeInterval","secondsActive","sessionCount","onStatsDialogClosed"],"mappings":"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","file":"transmission.js","sourcesContent":["/**\n * Copyright © Jordan Lee, Dave Perrett, Malcolm Jarvis and Bruno Bierbaumer\n *\n * This file is licensed under the GPLv2.\n * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n */\n\nfunction Transmission() {\n    this.initialize();\n}\n\nTransmission.prototype =\n{\n    /****\n     *****\n     *****  STARTUP\n     *****\n     ****/\n\n    initialize: function () {\n        var e;\n\n        // Initialize the helper classes\n        this.remote = new TransmissionRemote(this);\n        this.inspector = new Inspector(this, this.remote);\n        this.prefsDialog = new PrefsDialog(this.remote);\n        $(this.prefsDialog).bind('closed', $.proxy(this.onPrefsDialogClosed, this));\n\n        this.isMenuEnabled = !isMobileDevice;\n\n        // Initialize the implementation fields\n        this.filterText = '';\n        this._torrents = {};\n        this._rows = [];\n        this.dirtyTorrents = {};\n        this.uriCache = {};\n\n        // Initialize the clutch preferences\n        Prefs.getClutchPrefs(this);\n\n        // Set up user events\n        $(\".numberinput\").forceNumeric();\n        $('#toolbar-pause').click($.proxy(this.stopSelectedClicked, this));\n        $('#toolbar-start').click($.proxy(this.startSelectedClicked, this));\n        $('#toolbar-pause-all').click($.proxy(this.stopAllClicked, this));\n        $('#toolbar-start-all').click($.proxy(this.startAllClicked, this));\n        $('#toolbar-remove').click($.proxy(this.removeClicked, this));\n        $('#toolbar-open').click($.proxy(this.openTorrentClicked, this));\n\n        $('#prefs-button').click($.proxy(this.togglePrefsDialogClicked, this));\n\n        $('#upload_confirm_button').click($.proxy(this.confirmUploadClicked, this));\n        $('#upload_cancel_button').click($.proxy(this.hideUploadDialog, this));\n        $('#turtle-button').click($.proxy(this.toggleTurtleClicked, this));\n        $('#compact-button').click($.proxy(this.toggleCompactClicked, this));\n\n        // tell jQuery to copy the dataTransfer property from events over if it exists\n        jQuery.event.props.push(\"dataTransfer\");\n\n        $('#torrent_upload_form').submit(function () {\n            $('#upload_confirm_button').click();\n            return false;\n        });\n\n        $('#toolbar-inspector').click($.proxy(this.toggleInspector, this));\n\n        e = $('#filter-mode');\n        e.val(this[Prefs._FilterMode]);\n        e.change($.proxy(this.onFilterModeClicked, this));\n        $('#filter-tracker').change($.proxy(this.onFilterTrackerClicked, this));\n\n        if (!isMobileDevice) {\n            $(document).bind('keydown', $.proxy(this.keyDown, this));\n            $(document).bind('keyup', $.proxy(this.keyUp, this));\n            $('#torrent_container').click($.proxy(this.deselectAll, this));\n            $('#torrent_container').bind('dragover', $.proxy(this.dragenter, this));\n            $('#torrent_container').bind('dragenter', $.proxy(this.dragenter, this));\n            $('#torrent_container').bind('drop', $.proxy(this.drop, this));\n            $('#inspector_link').click($.proxy(this.toggleInspector, this));\n\n            this.setupSearchBox();\n            this.createContextMenu();\n        }\n\n        if (this.isMenuEnabled)\n            this.createSettingsMenu();\n\n        e = {};\n        e.torrent_list = $('#torrent_list')[0];\n        e.toolbar_buttons = $('#toolbar ul li');\n        e.toolbar_pause_button = $('#toolbar-pause')[0];\n        e.toolbar_start_button = $('#toolbar-start')[0];\n        e.toolbar_remove_button = $('#toolbar-remove')[0];\n        this.elements = e;\n\n        // Apply the prefs settings to the gui\n        this.initializeSettings();\n\n        // Get preferences & torrents from the daemon\n        var async = false;\n        this.loadDaemonPrefs(async);\n        this.loadDaemonStats(async);\n        this.initializeTorrents();\n        this.refreshTorrents();\n        this.togglePeriodicSessionRefresh(true);\n\n        this.updateButtonsSoon();\n    },\n\n    loadDaemonPrefs: function (async) {\n        this.remote.loadDaemonPrefs(function (data) {\n            var o = data['arguments'];\n            Prefs.getClutchPrefs(o);\n            this.updateGuiFromSession(o);\n            this.sessionProperties = o;\n        }, this, async);\n    },\n\n    loadImages: function () {\n        for (var i = 0, row; row = arguments[i]; ++i)\n            jQuery(\"<img>\").attr(\"src\", row);\n    },\n\n    /*\n     * Load the clutch prefs and init the GUI according to those prefs\n     */\n    initializeSettings: function () {\n        Prefs.getClutchPrefs(this);\n\n        if (this.isMenuEnabled) {\n            $('#sort_by_' + this[Prefs._SortMethod]).selectMenuItem();\n\n            if (this[Prefs._SortDirection] === Prefs._SortDescending)\n                $('#reverse_sort_order').selectMenuItem();\n        }\n\n        this.initCompactMode();\n    },\n\n    /*\n     * Set up the search box\n     */\n    setupSearchBox: function () {\n        var tr = this;\n        var search_box = $('#torrent_search');\n        search_box.bind('keyup click', function () {\n            tr.setFilterText(this.value);\n        });\n        if (!$.browser.safari) {\n            search_box.addClass('blur');\n            search_box[0].value = 'Filter';\n            search_box.bind('blur', function () {\n                if (this.value === '') {\n                    $(this).addClass('blur');\n                    this.value = 'Filter';\n                    tr.setFilterText(null);\n                }\n            }).bind('focus', function () {\n                if ($(this).is('.blur')) {\n                    this.value = '';\n                    $(this).removeClass('blur');\n                }\n            });\n        }\n    },\n\n    /**\n     * Create the torrent right-click menu\n     */\n    createContextMenu: function () {\n        var tr = this;\n        var bindings = {\n            context_pause_selected: function () {\n                tr.stopSelectedTorrents();\n            },\n            context_resume_selected: function () {\n                tr.startSelectedTorrents(false);\n            },\n            context_resume_now_selected: function () {\n                tr.startSelectedTorrents(true);\n            },\n            context_remove: function () {\n                tr.removeSelectedTorrents();\n            },\n            context_removedata: function () {\n                tr.removeSelectedTorrentsAndData();\n            },\n            context_verify: function () {\n                tr.verifySelectedTorrents();\n            },\n            context_reannounce: function () {\n                tr.reannounceSelectedTorrents();\n            },\n            context_move_top: function () {\n                tr.moveTop();\n            },\n            context_move_up: function () {\n                tr.moveUp();\n            },\n            context_move_down: function () {\n                tr.moveDown();\n            },\n            context_move_bottom: function () {\n                tr.moveBottom();\n            }\n        };\n\n        // Set up the context menu\n        $('ul#torrent_list').contextMenu('torrent_context_menu', {\n            bindings: bindings,\n            menuStyle: {width: '310px', backgroundColor: '#fff', border: 'none', padding: '5px 0', textAlign: 'left'},\n            itemStyle: {\n                backgroundColor: 'transparent',\n                margin: '0',\n                padding: '3px 10px 3px 20px',\n                color: '#000',\n                cursor: 'default',\n                border: 'none'\n            },\n            itemHoverStyle: {backgroundColor: '#4dd097', color: '#fff', border: 'none'},\n            shadow: false,\n            boundingElement: $('div#torrent_container'),\n            boundingRightPad: 20,\n            boundingBottomPad: 5,\n            onContextMenu: function (ev) {\n                var element = $(ev.target).closest('.torrent')[0];\n                var i = $('#torrent_list > li').index(element);\n                if ((i !== -1) && !tr._rows[i].isSelected())\n                    tr.setSelectedRow(tr._rows[i]);\n                return true;\n            }\n        });\n    },\n\n    createSettingsMenu: function () {\n        $('#settings_menu').transMenu({\n            selected_char: '&#x2714;',\n            direction: 'up',\n            onClick: $.proxy(this.onMenuClicked, this)\n        });\n\n        $('#unlimited_download_rate').selectMenuItem();\n        $('#unlimited_upload_rate').selectMenuItem();\n    },\n\n\n    /****\n     *****\n     *****  UTILITIES\n     *****\n     ****/\n\n    getAllTorrents: function () {\n        var torrents = [];\n        for (var key in this._torrents)\n            torrents.push(this._torrents[key]);\n        return torrents;\n    },\n\n    getTorrentIds: function (torrents) {\n        return $.map(torrents.slice(0), function (t) {\n            return t.getId();\n        });\n    },\n\n    scrollToRow: function (row) {\n        if (isMobileDevice) // FIXME: why?\n            return;\n\n        var list = $('#torrent_container'),\n            scrollTop = list.scrollTop(),\n            innerHeight = list.innerHeight(),\n            offsetTop = row.getElement().offsetTop,\n            offsetHeight = $(row.getElement()).outerHeight();\n\n        if (offsetTop < scrollTop)\n            list.scrollTop(offsetTop);\n        else if (innerHeight + scrollTop < offsetTop + offsetHeight)\n            list.scrollTop(offsetTop + offsetHeight - innerHeight);\n    },\n\n    seedRatioLimit: function () {\n        var p = this.sessionProperties;\n        if (p && p.seedRatioLimited)\n            return p.seedRatioLimit;\n        return -1;\n    },\n\n    setPref: function (key, val) {\n        this[key] = val;\n        Prefs.setValue(key, val);\n    },\n\n    /****\n     *****\n     *****  SELECTION\n     *****\n     ****/\n\n    getSelectedRows: function () {\n        return $.grep(this._rows, function (r) {\n            return r.isSelected();\n        });\n    },\n\n    getSelectedTorrents: function () {\n        return $.map(this.getSelectedRows(), function (r) {\n            return r.getTorrent();\n        });\n    },\n\n    getSelectedTorrentIds: function () {\n        return this.getTorrentIds(this.getSelectedTorrents());\n    },\n\n    setSelectedRow: function (row) {\n        $(this.elements.torrent_list).children('.selected').removeClass('selected');\n        this.selectRow(row);\n    },\n\n    selectRow: function (row) {\n        $(row.getElement()).addClass('selected');\n        this.callSelectionChangedSoon();\n    },\n\n    deselectRow: function (row) {\n        $(row.getElement()).removeClass('selected');\n        this.callSelectionChangedSoon();\n    },\n\n    selectAll: function () {\n        $(this.elements.torrent_list).children().addClass('selected');\n        this.callSelectionChangedSoon();\n    },\n    deselectAll: function () {\n        $(this.elements.torrent_list).children('.selected').removeClass('selected');\n        this.callSelectionChangedSoon();\n        delete this._last_torrent_clicked;\n    },\n\n    indexOfLastTorrent: function () {\n        for (var i = 0, r; r = this._rows[i]; ++i)\n            if (r.getTorrentId() === this._last_torrent_clicked)\n                return i;\n        return -1;\n    },\n\n    // Select a range from this row to the last clicked torrent\n    selectRange: function (row) {\n        var last = this.indexOfLastTorrent();\n\n        if (last === -1) {\n            this.selectRow(row);\n        }\n        else // select the range between the prevous & current\n        {\n            var next = this._rows.indexOf(row);\n            var min = Math.min(last, next);\n            var max = Math.max(last, next);\n            for (var i = min; i <= max; ++i)\n                this.selectRow(this._rows[i]);\n        }\n\n        this.callSelectionChangedSoon();\n    },\n\n    selectionChanged: function () {\n        this.updateButtonStates();\n\n        this.inspector.setTorrents(this.inspectorIsVisible() ? this.getSelectedTorrents() : []);\n\n        clearTimeout(this.selectionChangedTimer);\n        delete this.selectionChangedTimer;\n\n    },\n\n    callSelectionChangedSoon: function () {\n        if (!this.selectionChangedTimer) {\n            var callback = $.proxy(this.selectionChanged, this),\n                msec = 200;\n            this.selectionChangedTimer = setTimeout(callback, msec);\n        }\n    },\n\n    /*--------------------------------------------\n     *\n     *  E V E N T   F U N C T I O N S\n     *\n     *--------------------------------------------*/\n\n    /*\n     * Process key event\n     */\n    keyDown: function (ev) {\n        var handled = false,\n            rows = this._rows,\n            up = ev.keyCode === 38, // up key pressed\n            dn = ev.keyCode === 40, // down key pressed\n            shift = ev.keyCode === 16; // shift key pressed\n\n        if ((up || dn) && rows.length) {\n            var last = this.indexOfLastTorrent(),\n                i = last,\n                anchor = this._shift_index,\n                r,\n                min = 0,\n                max = rows.length - 1;\n\n            if (dn && (i + 1 <= max))\n                ++i;\n            else if (up && (i - 1 >= min))\n                --i;\n\n            var r = rows[i];\n\n            if (anchor >= 0) {\n                // user is extending the selection\n                // with the shift + arrow keys...\n                if (((anchor <= last) && (last < i))\n                    || ((anchor >= last) && (last > i))) {\n                    this.selectRow(r);\n                }\n                else if (((anchor >= last) && (i > last))\n                    || ((anchor <= last) && (last > i))) {\n                    this.deselectRow(rows[last]);\n                }\n            }\n            else {\n                if (ev.shiftKey)\n                    this.selectRange(r);\n                else\n                    this.setSelectedRow(r);\n            }\n            this._last_torrent_clicked = r.getTorrentId();\n            this.scrollToRow(r);\n            handled = true;\n        }\n        else if (shift) {\n            this._shift_index = this.indexOfLastTorrent();\n        }\n\n        return !handled;\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === 16) // shift key pressed\n            delete this._shift_index;\n    },\n\n    isButtonEnabled: function (ev) {\n        var p = (ev.target || ev.srcElement).parentNode;\n        return p.className !== 'disabled'\n            && p.parentNode.className !== 'disabled';\n    },\n\n    stopSelectedClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            this.stopSelectedTorrents();\n            this.hideMobileAddressbar();\n        }\n    },\n\n    startSelectedClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            this.startSelectedTorrents(false);\n            this.hideMobileAddressbar();\n        }\n    },\n\n    stopAllClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            this.stopAllTorrents();\n            this.hideMobileAddressbar();\n        }\n    },\n\n    startAllClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            this.startAllTorrents(false);\n            this.hideMobileAddressbar();\n        }\n    },\n\n    openTorrentClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            $('body').addClass('open_showing');\n            this.uploadTorrentFile();\n            this.updateButtonStates();\n        }\n    },\n\n    dragenter: function (ev) {\n        if (ev.dataTransfer && ev.dataTransfer.types) {\n            var types = [\"text/uri-list\", \"text/plain\"];\n            for (var i = 0; i < types.length; ++i) {\n                // it would be better to look at the links here;\n                // sadly, with Firefox, trying would throw.\n                if (ev.dataTransfer.types.contains(types[i])) {\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                    ev.dropEffect = \"copy\";\n                    return false;\n                }\n            }\n        }\n        else if (ev.dataTransfer) {\n            ev.dataTransfer.dropEffect = \"none\";\n        }\n        return true;\n    },\n\n    drop: function (ev) {\n        var i, uri, uris = null,\n            types = [\"text/uri-list\", \"text/plain\"];\n        paused = this.shouldAddedTorrentsStart();\n\n        if (!ev.dataTransfer || !ev.dataTransfer.types)\n            return true;\n\n        for (i = 0; !uris && i < types.length; ++i)\n            if (ev.dataTransfer.types.contains(types[i]))\n                uris = ev.dataTransfer.getData(types[i]).split(\"\\n\");\n\n        for (i = 0; uri = uris[i]; ++i) {\n            if (/^#/.test(uri)) // lines which start with \"#\" are comments\n                continue;\n            if (/^[a-z-]+:/i.test(uri)) // close enough to a url\n                this.remote.addTorrentByUrl(uri, paused);\n        }\n\n        ev.preventDefault();\n        return false;\n    },\n\n    hideUploadDialog: function () {\n        $('body.open_showing').removeClass('open_showing');\n        $('#upload_container').hide();\n        this.updateButtonStates();\n    },\n\n    confirmUploadClicked: function () {\n        this.uploadTorrentFile(true);\n        this.hideUploadDialog();\n    },\n\n    removeClicked: function (ev) {\n        if (this.isButtonEnabled(ev)) {\n            this.removeSelectedTorrents();\n            this.hideMobileAddressbar();\n        }\n    },\n\n    // turn the periodic ajax session refresh on & off\n    togglePeriodicSessionRefresh: function (enabled) {\n        clearInterval(this.sessionInterval);\n        delete this.sessionInterval;\n        if (enabled) {\n            var callback = $.proxy(this.loadDaemonPrefs, this),\n                msec = 8000;\n            this.sessionInterval = setInterval(callback, msec);\n        }\n    },\n\n    toggleTurtleClicked: function () {\n        var o = {};\n        o[RPC._TurtleState] = !$('#turtle-button').hasClass('selected');\n        this.remote.savePrefs(o);\n    },\n\n    /*--------------------------------------------\n     *\n     *  I N T E R F A C E   F U N C T I O N S\n     *\n     *--------------------------------------------*/\n\n    onPrefsDialogClosed: function () {\n        $('#prefs-button').removeClass('selected');\n    },\n\n    togglePrefsDialogClicked: function (ev) {\n        var e = $('#prefs-button');\n\n        if (e.hasClass('selected'))\n            this.prefsDialog.close();\n        else {\n            e.addClass('selected');\n            this.prefsDialog.show();\n        }\n    },\n\n    setFilterText: function (search) {\n        this.filterText = search ? search.trim() : null;\n        this.refilter(true);\n    },\n\n    setSortMethod: function (sort_method) {\n        this.setPref(Prefs._SortMethod, sort_method);\n        this.refilter(true);\n    },\n\n    setSortDirection: function (direction) {\n        this.setPref(Prefs._SortDirection, direction);\n        this.refilter(true);\n    },\n\n    onMenuClicked: function (ev) {\n        var o, dir,\n            id = ev.target.id,\n            remote = this.remote,\n            element = $(ev.target);\n\n        if (element.hasClass('sort-mode')) {\n            element.parent().find('.sort-mode').each(function () {\n                element.parent().deselectMenuItem();\n            });\n            element.selectMenuItem();\n            this.setSortMethod(id.replace(/sort_by_/, ''));\n        }\n        else if (element.hasClass('upload-speed')) {\n            o = {};\n            o[RPC._UpSpeedLimit] = parseInt(ev.target.innerHTML);\n            o[RPC._UpSpeedLimited] = true;\n            remote.savePrefs(o);\n        }\n        else if (element.hasClass('download-speed')) {\n            o = {};\n            o[RPC._DownSpeedLimit] = parseInt(ev.target.innerHTML);\n            o[RPC._DownSpeedLimited] = true;\n            remote.savePrefs(o);\n        }\n        else switch (id) {\n                case 'statistics':\n                    this.showStatsDialog();\n                    break;\n\n                case 'about-button':\n                    o = 'Transmission ' + this.serverVersion;\n                    $('#about-dialog #about-title').html(o);\n                    $('#about-dialog').dialog({\n                        title: '关于Transmission',\n                        show: 'fade',\n                        hide: 'fade'\n                    });\n                    break;\n\n                case 'homepage':\n                    window.open('http://www.transmissionbt.com/');\n                    break;\n\n                case 'tipjar':\n                    window.open('http://www.transmissionbt.com/donate.php');\n                    break;\n\n                case 'unlimited_download_rate':\n                    o = {};\n                    o[RPC._DownSpeedLimited] = false;\n                    remote.savePrefs(o);\n                    break;\n\n                case 'limited_download_rate':\n                    o = {};\n                    o[RPC._DownSpeedLimited] = true;\n                    remote.savePrefs(o);\n                    break;\n\n                case 'unlimited_upload_rate':\n                    o = {};\n                    o[RPC._UpSpeedLimited] = false;\n                    remote.savePrefs(o);\n                    break;\n\n                case 'limited_upload_rate':\n                    o = {};\n                    o[RPC._UpSpeedLimited] = true;\n                    remote.savePrefs(o);\n                    break;\n\n                case 'reverse_sort_order':\n                    if (element.menuItemIsSelected()) {\n                        dir = Prefs._SortAscending;\n                        element.deselectMenuItem();\n                    } else {\n                        dir = Prefs._SortDescending;\n                        element.selectMenuItem();\n                    }\n                    this.setSortDirection(dir);\n                    break;\n\n                default:\n                    console.log('unhandled: ' + id);\n                    break;\n\n            }\n        $('#settings_menu').trigger('closemenu');\n        ev.stopImmediatePropagation();\n    },\n\n\n    onTorrentChanged: function (ev, tor) {\n        // update our dirty fields\n        this.dirtyTorrents[tor.getId()] = true;\n\n        // enqueue ui refreshes\n        this.refilterSoon();\n        this.updateButtonsSoon();\n    },\n\n    updateFromTorrentGet: function (updates, removed_ids) {\n        var i, o, t, id, needed, needinfo = [],\n            callback, fields;\n\n        for (i = 0; o = updates[i]; ++i) {\n            id = o.id;\n            if ((t = this._torrents[id])) {\n                needed = t.needsMetaData();\n                t.refresh(o);\n                if (needed && !t.needsMetaData())\n                    needinfo.push(id);\n            }\n            else {\n                t = this._torrents[id] = new Torrent(o);\n                this.dirtyTorrents[id] = true;\n                callback = $.proxy(this.onTorrentChanged, this);\n                $(t).bind('dataChanged', callback);\n                // do we need more info for this torrent?\n                if (!('name' in t.fields) || !('status' in t.fields))\n                    needinfo.push(id);\n            }\n        }\n\n        if (needinfo.length) {\n            // whee, new torrents! get their initial information.\n            fields = ['id'].concat(Torrent.Fields.Metadata,\n                Torrent.Fields.Stats);\n            this.updateTorrents(needinfo, fields);\n            this.refilterSoon();\n        }\n\n        if (removed_ids) {\n            this.deleteTorrents(removed_ids);\n            this.refilterSoon();\n        }\n    },\n\n    updateTorrents: function (ids, fields) {\n        this.remote.updateTorrents(ids, fields,\n            this.updateFromTorrentGet, this);\n    },\n\n    refreshTorrents: function () {\n        var callback = $.proxy(this.refreshTorrents, this),\n            msec = this[Prefs._RefreshRate] * 1000,\n            fields = ['id'].concat(Torrent.Fields.Stats);\n\n        // send a request right now\n        this.updateTorrents('recently-active', fields);\n\n        // schedule the next request\n        clearTimeout(this.refreshTorrentsTimeout);\n        this.refreshTorrentsTimeout = setTimeout(callback, msec);\n    },\n\n    initializeTorrents: function () {\n        var fields = ['id'].concat(Torrent.Fields.Metadata,\n            Torrent.Fields.Stats);\n        this.updateTorrents(null, fields);\n    },\n\n    onRowClicked: function (ev) {\n        var meta_key = ev.metaKey || ev.ctrlKey,\n            row = ev.currentTarget.row;\n\n        // handle the per-row \"torrent_resume\" button\n        if (ev.target.className === 'torrent_resume') {\n            this.startTorrent(row.getTorrent());\n            return;\n        }\n\n        // handle the per-row \"torrent_pause\" button\n        if (ev.target.className === 'torrent_pause') {\n            this.stopTorrent(row.getTorrent());\n            return;\n        }\n\n        // Prevents click carrying to parent element\n        // which deselects all on click\n        ev.stopPropagation();\n        // but still hide the context menu if it is showing\n        $('#jqContextMenu').hide();\n\n        if (isMobileDevice) {\n            if (row.isSelected())\n                this.setInspectorVisible(true);\n            this.setSelectedRow(row);\n\n        } else if (ev.shiftKey) {\n            this.selectRange(row);\n            // Need to deselect any selected text\n            window.focus();\n\n            // Apple-Click, not selected\n        } else if (!row.isSelected() && meta_key) {\n            this.selectRow(row);\n\n            // Regular Click, not selected\n        } else if (!row.isSelected()) {\n            this.setSelectedRow(row);\n\n            // Apple-Click, selected\n        } else if (row.isSelected() && meta_key) {\n            this.deselectRow(row);\n\n            // Regular Click, selected\n        } else if (row.isSelected()) {\n            this.setSelectedRow(row);\n        }\n\n        this._last_torrent_clicked = row.getTorrentId();\n    },\n\n    deleteTorrents: function (ids) {\n        var i, id;\n\n        if (ids && ids.length) {\n            for (i = 0; id = ids[i]; ++i) {\n                this.dirtyTorrents[id] = true;\n                delete this._torrents[id];\n            }\n            this.refilter();\n        }\n    },\n\n    shouldAddedTorrentsStart: function () {\n        return this.prefsDialog.shouldAddedTorrentsStart();\n    },\n\n    /*\n     * Select a torrent file to upload\n     * FIXME\n     */\n    uploadTorrentFile: function (confirmed) {\n        // Display the upload dialog\n        if (!confirmed) {\n            $('input#torrent_upload_file').attr('value', '');\n            $('input#torrent_upload_url').attr('value', '');\n            $('input#torrent_auto_start').attr('checked', this.shouldAddedTorrentsStart());\n            $('#upload_container').show();\n            $('#torrent_upload_url').focus();\n\n            // Submit the upload form\n        } else {\n            var args = {};\n            var remote = this.remote;\n            var paused = !$('#torrent_auto_start').is(':checked');\n            if ('' != $('#torrent_upload_url').val()) {\n                remote.addTorrentByUrl($('#torrent_upload_url').val(), {paused: paused});\n            } else {\n                args.url = '../upload?paused=' + paused;\n                args.type = 'POST';\n                args.data = {'X-Transmission-Session-Id': remote._token};\n                args.dataType = 'xml';\n                args.iframe = true;\n                $('#torrent_upload_form').ajaxSubmit(args);\n            }\n        }\n    },\n\n    removeSelectedTorrents: function () {\n        var torrents = this.getSelectedTorrents();\n        if (torrents.length)\n            this.promptToRemoveTorrents(torrents);\n    },\n\n    removeSelectedTorrentsAndData: function () {\n        var torrents = this.getSelectedTorrents();\n        if (torrents.length)\n            this.promptToRemoveTorrentsAndData(torrents);\n    },\n\n    promptToRemoveTorrents: function (torrents) {\n        if (torrents.length === 1) {\n            var torrent = torrents[0],\n                header = '移除 ' + torrent.getName() + '?',\n                message = '一旦移除，继续下载需要提供种子文件，你确定要移除吗？';\n            dialog.confirm(header, message, '移除', 'transmission.removeTorrents', torrents);\n        }\n        else {\n            var header = '移除选择的 ' + torrents.length + ' 个传输任务?',\n                message = '一旦移除它们, 继续下载需要提供种子文件，你确定要移除它们吗？';\n            dialog.confirm(header, message, '移除', 'transmission.removeTorrents', torrents);\n        }\n    },\n\n    promptToRemoveTorrentsAndData: function (torrents) {\n        if (torrents.length === 1) {\n            var torrent = torrents[0],\n                header = '移除 ' + torrent.getName() + ' 并删除数据?',\n                message = '所有属于此种子的数据将会被删除，你确定移除吗？';\n            dialog.confirm(header, message, '移除', 'transmission.removeTorrentsAndData', torrents);\n        }\n        else {\n            var header = '移除 ' + torrents.length + ' transfers and delete data?',\n                message = '所有属于这些种子的数据将会被删除，你确定移除它们吗？';\n            dialog.confirm(header, message, '移除', 'transmission.removeTorrentsAndData', torrents);\n        }\n    },\n\n    removeTorrents: function (torrents) {\n        var ids = this.getTorrentIds(torrents);\n        this.remote.removeTorrents(ids, this.refreshTorrents, this);\n    },\n\n    removeTorrentsAndData: function (torrents) {\n        this.remote.removeTorrentsAndData(torrents);\n    },\n\n    verifySelectedTorrents: function () {\n        this.verifyTorrents(this.getSelectedTorrents());\n    },\n\n    reannounceSelectedTorrents: function () {\n        this.reannounceTorrents(this.getSelectedTorrents());\n    },\n\n    startAllTorrents: function (force) {\n        this.startTorrents(this.getAllTorrents(), force);\n    },\n    startSelectedTorrents: function (force) {\n        this.startTorrents(this.getSelectedTorrents(), force);\n    },\n    startTorrent: function (torrent) {\n        this.startTorrents([torrent], false);\n    },\n\n    startTorrents: function (torrents, force) {\n        this.remote.startTorrents(this.getTorrentIds(torrents), force,\n            this.refreshTorrents, this);\n    },\n    verifyTorrent: function (torrent) {\n        this.verifyTorrents([torrent]);\n    },\n    verifyTorrents: function (torrents) {\n        this.remote.verifyTorrents(this.getTorrentIds(torrents),\n            this.refreshTorrents, this);\n    },\n\n    reannounceTorrent: function (torrent) {\n        this.reannounceTorrents([torrent]);\n    },\n    reannounceTorrents: function (torrents) {\n        this.remote.reannounceTorrents(this.getTorrentIds(torrents),\n            this.refreshTorrents, this);\n    },\n\n    stopAllTorrents: function () {\n        this.stopTorrents(this.getAllTorrents());\n    },\n    stopSelectedTorrents: function () {\n        this.stopTorrents(this.getSelectedTorrents());\n    },\n    stopTorrent: function (torrent) {\n        this.stopTorrents([torrent]);\n    },\n    stopTorrents: function (torrents) {\n        this.remote.stopTorrents(this.getTorrentIds(torrents),\n            this.refreshTorrents, this);\n    },\n    changeFileCommand: function (torrentId, rowIndices, command) {\n        this.remote.changeFileCommand(torrentId, rowIndices, command);\n    },\n\n    hideMobileAddressbar: function (delaySecs) {\n        if (isMobileDevice && !scroll_timeout) {\n            var callback = $.proxy(this.doToolbarHide, this),\n                msec = delaySecs * 1000 || 150;\n            scroll_timeout = setTimeout(callback, msec);\n        }\n    },\n    doToolbarHide: function () {\n        window.scrollTo(0, 1);\n        scroll_timeout = null;\n    },\n\n    // Queue\n    moveTop: function () {\n        this.remote.moveTorrentsToTop(this.getSelectedTorrentIds(),\n            this.refreshTorrents, this);\n    },\n    moveUp: function () {\n        this.remote.moveTorrentsUp(this.getSelectedTorrentIds(),\n            this.refreshTorrents, this);\n    },\n    moveDown: function () {\n        this.remote.moveTorrentsDown(this.getSelectedTorrentIds(),\n            this.refreshTorrents, this);\n    },\n    moveBottom: function () {\n        this.remote.moveTorrentsToBottom(this.getSelectedTorrentIds(),\n            this.refreshTorrents, this);\n    },\n\n    /***\n     ****\n     ***/\n\n    updateGuiFromSession: function (o) {\n        var limit, limited, e, b, text,\n            fmt = Transmission.fmt,\n            menu = $('#settings_menu');\n\n        this.serverVersion = o.version;\n\n        this.prefsDialog.set(o);\n\n        if (RPC._TurtleState in o) {\n            b = o[RPC._TurtleState];\n            e = $('#turtle-button');\n            text = [\n                '点击', (b ? '关闭' : '开启'),\n                '临时限速(',\n                '上传：',\n                fmt.speed(o[RPC._TurtleUpSpeedLimit]),\n                ' 下载：',\n                fmt.speed(o[RPC._TurtleDownSpeedLimit]),\n                ')'\n            ].join('');\n            e.toggleClass('selected', b);\n            e.attr('title', text);\n        }\n\n        if (this.isMenuEnabled && (RPC._DownSpeedLimited in o)\n            && (RPC._DownSpeedLimit in o)) {\n            limit = o[RPC._DownSpeedLimit];\n            limited = o[RPC._DownSpeedLimited];\n\n            e = menu.find('#limited_download_rate');\n            e.html('Limit (' + fmt.speed(limit) + ')');\n\n            if (!limited)\n                e = menu.find('#unlimited_download_rate');\n            e.deselectMenuSiblings().selectMenuItem();\n        }\n\n        if (this.isMenuEnabled && (RPC._UpSpeedLimited in o)\n            && (RPC._UpSpeedLimit in o)) {\n            limit = o[RPC._UpSpeedLimit];\n            limited = o[RPC._UpSpeedLimited];\n\n            e = menu.find('#limited_upload_rate');\n            e.html('Limit (' + fmt.speed(limit) + ')');\n\n            if (!limited)\n                e = menu.find('#unlimited_upload_rate');\n            e.deselectMenuSiblings().selectMenuItem();\n        }\n    },\n\n    updateStatusbar: function () {\n        var u = 0, d = 0,\n            i, row, text,\n            fmt = Transmission.fmt,\n            torrents = this.getAllTorrents();\n\n        // up/down speed\n        for (i = 0; row = torrents[i]; ++i) {\n            u += row.getUploadSpeed();\n            d += row.getDownloadSpeed();\n        }\n\n        $('#speed-up-container').toggleClass('active', u > 0);\n        $('#speed-up-label').text(fmt.speedBps(u));\n\n        $('#speed-dn-container').toggleClass('active', d > 0);\n        $('#speed-dn-label').text(fmt.speedBps(d));\n\n        // visible torrents\n        $('#filter-count').text(fmt.plural(this._rows.length, '个传输任务'));\n    },\n\n    setEnabled: function (key, flag) {\n        $(key).toggleClass('disabled', !flag);\n    },\n\n    updateFilterSelect: function () {\n        var i, names, name, str, o,\n            e = $('#filter-tracker'),\n            trackers = this.getTrackers();\n\n        // build a sorted list of names\n        names = [];\n        for (name in trackers)\n            names.push(name);\n        names.sort();\n\n        // build the new html\n        if (!this.filterTracker)\n            str = '<option value=\"all\" selected=\"selected\">所有Tracker</option>';\n        else\n            str = '<option value=\"all\">所有Tracker</option>';\n        for (i = 0; name = names[i]; ++i) {\n            o = trackers[name];\n            str += '<option value=\"' + o.domain + '\"';\n            if (trackers[name].domain === this.filterTracker) str += ' selected=\"selected\"';\n            str += '>' + name + '</option>';\n        }\n\n        if (!this.filterTrackersStr || (this.filterTrackersStr !== str)) {\n            this.filterTrackersStr = str;\n            $('#filter-tracker').html(str);\n        }\n    },\n\n    updateButtonsSoon: function () {\n        if (!this.buttonRefreshTimer) {\n            var callback = $.proxy(this.updateButtonStates, this),\n                msec = 100;\n            this.buttonRefreshTimer = setTimeout(callback, msec);\n        }\n    },\n\n    updateButtonStates: function () {\n        var e = this.elements,\n            haveActive = false,\n            havePaused = false,\n            haveSel = false,\n            haveActiveSel = false,\n            havePausedSel = false;\n\n        clearTimeout(this.buttonRefreshTimer);\n        delete this.buttonRefreshTimer;\n\n        for (var i = 0, row; row = this._rows[i]; ++i) {\n            var isStopped = row.getTorrent().isStopped();\n            var isSelected = row.isSelected();\n            if (!isStopped) haveActive = true;\n            if (isStopped) havePaused = true;\n            if (isSelected) haveSel = true;\n            if (isSelected && !isStopped) haveActiveSel = true;\n            if (isSelected && isStopped) havePausedSel = true;\n        }\n\n        this.setEnabled(e.toolbar_pause_button, haveActiveSel);\n        this.setEnabled(e.toolbar_start_button, havePausedSel);\n        this.setEnabled(e.toolbar_remove_button, haveSel);\n    },\n\n    /****\n     *****\n     *****  INSPECTOR\n     *****\n     ****/\n\n    inspectorIsVisible: function () {\n        return $('#torrent_inspector').is(':visible');\n    },\n    toggleInspector: function () {\n        this.setInspectorVisible(!this.inspectorIsVisible());\n    },\n    setInspectorVisible: function (visible) {\n        if (visible)\n            this.inspector.setTorrents(this.getSelectedTorrents());\n\n        // update the ui widgetry\n        $('#torrent_inspector').toggle(visible);\n        $('#toolbar-inspector').toggleClass('selected', visible);\n        this.hideMobileAddressbar();\n        if (isMobileDevice) {\n            $('body').toggleClass('inspector_showing', visible);\n        } else {\n            var w = visible ? $('#torrent_inspector').outerWidth() + 1 + 'px' : '0px';\n            $('#torrent_container')[0].style.right = w;\n        }\n    },\n\n    /****\n     *****\n     *****  FILTER\n     *****\n     ****/\n\n    refilterSoon: function () {\n        if (!this.refilterTimer) {\n            var tr = this,\n                callback = function () {\n                    tr.refilter(false);\n                },\n                msec = 100;\n            this.refilterTimer = setTimeout(callback, msec);\n        }\n    },\n\n    sortRows: function (rows) {\n        var i, tor, row,\n            id2row = {},\n            torrents = [];\n\n        for (i = 0; row = rows[i]; ++i) {\n            tor = row.getTorrent();\n            torrents.push(tor);\n            id2row[tor.getId()] = row;\n        }\n\n        Torrent.sortTorrents(torrents, this[Prefs._SortMethod],\n            this[Prefs._SortDirection]);\n\n        for (i = 0; tor = torrents[i]; ++i)\n            rows[i] = id2row[tor.getId()];\n    },\n\n    refilter: function (rebuildEverything) {\n        var i, e, id, t, row, tmp, rows, clean_rows, dirty_rows, frag,\n            sort_mode = this[Prefs._SortMethod],\n            sort_direction = this[Prefs._SortDirection],\n            filter_mode = this[Prefs._FilterMode],\n            filter_text = this.filterText,\n            filter_tracker = this.filterTracker,\n            renderer = this.torrentRenderer,\n            list = this.elements.torrent_list,\n            old_sel_count = $(list).children('.selected').length;\n\n        this.updateFilterSelect();\n\n        clearTimeout(this.refilterTimer);\n        delete this.refilterTimer;\n\n        if (rebuildEverything) {\n            $(list).empty();\n            this._rows = [];\n            for (id in this._torrents)\n                this.dirtyTorrents[id] = true;\n        }\n\n        // rows that overlap with dirtyTorrents need to be refiltered.\n        // those that don't are 'clean' and don't need refiltering.\n        clean_rows = [];\n        dirty_rows = [];\n        for (i = 0; row = this._rows[i]; ++i) {\n            if (row.getTorrentId() in this.dirtyTorrents)\n                dirty_rows.push(row);\n            else\n                clean_rows.push(row);\n        }\n\n        // remove the dirty rows from the dom\n        e = [];\n        for (i = 0; row = dirty_rows[i]; ++i)\n            e.push(row.getElement());\n        $(e).detach();\n\n        // drop any dirty rows that don't pass the filter test\n        tmp = [];\n        for (i = 0; row = dirty_rows[i]; ++i) {\n            id = row.getTorrentId();\n            t = this._torrents[id];\n            if (t && t.test(filter_mode, filter_text, filter_tracker))\n                tmp.push(row);\n            delete this.dirtyTorrents[id];\n        }\n        dirty_rows = tmp;\n\n        // make new rows for dirty torrents that pass the filter test\n        // but don't already have a row\n        for (id in this.dirtyTorrents) {\n            t = this._torrents[id];\n            if (t && t.test(filter_mode, filter_text, filter_tracker)) {\n                row = new TorrentRow(renderer, this, t);\n                e = row.getElement();\n                e.row = row;\n                dirty_rows.push(row);\n                $(e).click($.proxy(this.onRowClicked, this));\n                $(e).dblclick($.proxy(this.toggleInspector, this));\n            }\n        }\n\n        // sort the dirty rows\n        this.sortRows(dirty_rows);\n\n        // now we have two sorted arrays of rows\n        // and can do a simple two-way sorted merge.\n        rows = [];\n        var ci = 0, cmax = clean_rows.length;\n        var di = 0, dmax = dirty_rows.length;\n        frag = document.createDocumentFragment();\n        while (ci != cmax || di != dmax) {\n            var push_clean;\n\n            if (ci == cmax)\n                push_clean = false;\n            else if (di == dmax)\n                push_clean = true;\n            else {\n                var c = Torrent.compareTorrents(\n                    clean_rows[ci].getTorrent(),\n                    dirty_rows[di].getTorrent(),\n                    sort_mode, sort_direction);\n                push_clean = (c < 0);\n            }\n\n            if (push_clean)\n                rows.push(clean_rows[ci++]);\n            else {\n                row = dirty_rows[di++];\n                e = row.getElement();\n                if (ci !== cmax)\n                    list.insertBefore(e, clean_rows[ci].getElement());\n                else\n                    frag.appendChild(e);\n                rows.push(row);\n            }\n        }\n        list.appendChild(frag);\n\n        // update our implementation fields\n        this._rows = rows;\n        this.dirtyTorrents = {};\n\n        // jquery's even/odd starts with 1 not 0, so invert its logic\n        e = []\n        for (i = 0; row = rows[i]; ++i)\n            e.push(row.getElement());\n        $(e).filter(\":odd\").addClass('even');\n        $(e).filter(\":even\").removeClass('even');\n\n        // sync gui\n        this.updateStatusbar();\n        if (old_sel_count !== $(list).children('.selected').length)\n            this.selectionChanged();\n    },\n\n    setFilterMode: function (mode) {\n        // set the state\n        this.setPref(Prefs._FilterMode, mode);\n\n        // refilter\n        this.refilter(true);\n    },\n\n    onFilterModeClicked: function (ev) {\n        this.setFilterMode($('#filter-mode').val());\n    },\n\n    onFilterTrackerClicked: function (ev) {\n        var tracker = $('#filter-tracker').val();\n        this.setFilterTracker(tracker === 'all' ? null : tracker);\n    },\n\n    setFilterTracker: function (domain) {\n        // update which tracker is selected in the popup\n        var key = domain ? this.getReadableDomain(domain) : 'all',\n            id = '#show-tracker-' + key;\n        $(id).addClass('selected').siblings().removeClass('selected');\n\n        this.filterTracker = domain;\n        this.refilter(true);\n    },\n\n    // example: \"tracker.ubuntu.com\" returns \"ubuntu.com\"\n    getDomainName: function (host) {\n        var dot = host.indexOf('.');\n        if (dot !== host.lastIndexOf('.'))\n            host = host.slice(dot + 1);\n        return host;\n    },\n\n    // example: \"ubuntu.com\" returns \"Ubuntu\"\n    getReadableDomain: function (name) {\n        if (name.length)\n            name = name.charAt(0).toUpperCase() + name.slice(1);\n        var dot = name.indexOf('.');\n        if (dot !== -1)\n            name = name.slice(0, dot);\n        return name;\n    },\n\n    getTrackers: function () {\n        var ret = {};\n\n        var torrents = this.getAllTorrents();\n        for (var i = 0, torrent; torrent = torrents[i]; ++i) {\n            var names = [];\n            var trackers = torrent.getTrackers();\n            for (var j = 0, tracker; tracker = trackers[j]; ++j) {\n                var uri, announce = tracker.announce;\n\n                if (announce in this.uriCache)\n                    uri = this.uriCache[announce];\n                else {\n                    uri = this.uriCache[announce] = parseUri(announce);\n                    uri.domain = this.getDomainName(uri.host);\n                    uri.name = this.getReadableDomain(uri.domain);\n                }\n\n                if (!(uri.name in ret))\n                    ret[uri.name] = {\n                        'uri': uri,\n                        'domain': uri.domain,\n                        'count': 0\n                    };\n\n                if (names.indexOf(uri.name) === -1)\n                    names.push(uri.name);\n            }\n            for (var j = 0, name; name = names[j]; ++j)\n                ret[name].count++;\n        }\n\n        return ret;\n    },\n\n    /***\n     ****\n     ****  Compact Mode\n     ****\n     ***/\n\n    toggleCompactClicked: function () {\n        this.setCompactMode(!this[Prefs._CompactDisplayState]);\n    },\n    setCompactMode: function (is_compact) {\n        var key = Prefs._CompactDisplayState,\n            was_compact = this[key];\n\n        if (was_compact !== is_compact) {\n            this.setPref(key, is_compact);\n            this.onCompactModeChanged();\n        }\n    },\n    initCompactMode: function () {\n        this.onCompactModeChanged();\n    },\n    onCompactModeChanged: function () {\n        var compact = this[Prefs._CompactDisplayState];\n\n        // update the ui: footer button\n        $(\"#compact-button\").toggleClass('selected', compact);\n\n        // update the ui: torrent list\n        this.torrentRenderer = compact ? new TorrentRendererCompact()\n            : new TorrentRendererFull();\n        this.refilter(true);\n    },\n\n    /***\n     ****\n     ****  Statistics\n     ****\n     ***/\n\n    // turn the periodic ajax stats refresh on & off\n    togglePeriodicStatsRefresh: function (enabled) {\n        clearInterval(this.statsInterval);\n        delete this.statsInterval;\n        if (enabled) {\n            var callback = $.proxy(this.loadDaemonStats, this),\n                msec = 5000;\n            this.statsInterval = setInterval(callback, msec);\n        }\n    },\n\n    loadDaemonStats: function (async) {\n        this.remote.loadDaemonStats(function (data) {\n            this.updateStats(data['arguments']);\n        }, this, async);\n    },\n\n    // Process new session stats from the server\n    updateStats: function (stats) {\n        var s, ratio,\n            fmt = Transmission.fmt;\n\n        s = stats[\"current-stats\"];\n        ratio = Math.ratio(s.uploadedBytes, s.downloadedBytes);\n\n        $('#stats-session-uploaded').html(fmt.size(s.uploadedBytes));\n        $('#stats-session-downloaded').html(fmt.size(s.downloadedBytes));\n        $('#stats-session-ratio').html(fmt.ratioString(ratio));\n        $('#stats-session-duration').html(fmt.timeInterval(s.secondsActive));\n\n        s = stats[\"cumulative-stats\"];\n        ratio = Math.ratio(s.uploadedBytes, s.downloadedBytes);\n        $('#stats-total-count').html(s.sessionCount + \" times\");\n        $('#stats-total-uploaded').html(fmt.size(s.uploadedBytes));\n        $('#stats-total-downloaded').html(fmt.size(s.downloadedBytes));\n        $('#stats-total-ratio').html(fmt.ratioString(ratio));\n        $('#stats-total-duration').html(fmt.timeInterval(s.secondsActive));\n    },\n\n\n    showStatsDialog: function () {\n        this.loadDaemonStats();\n        this.hideMobileAddressbar();\n        this.togglePeriodicStatsRefresh(true);\n        $('#stats-dialog').dialog({\n            close: $.proxy(this.onStatsDialogClosed, this),\n            show: 'fade',\n            hide: 'fade',\n            title: '统计'\n        });\n    },\n\n    onStatsDialogClosed: function () {\n        this.hideMobileAddressbar();\n        this.togglePeriodicStatsRefresh(false);\n    }\n};\n"],"sourceRoot":"/source/"}