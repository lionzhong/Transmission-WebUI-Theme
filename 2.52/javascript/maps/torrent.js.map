{"version":3,"sources":["torrent.js"],"names":["Torrent","data","this","initialize","_StatusStopped","_StatusCheckWait","_StatusCheck","_StatusDownloadWait","_StatusDownload","_StatusSeedWait","_StatusSeed","_RatioUseGlobal","_RatioUseLocal","_RatioUnlimited","_ErrNone","_ErrTrackerWarning","_ErrTrackerError","_ErrLocalError","_TrackerInactive","_TrackerWaiting","_TrackerQueued","_TrackerActive","Fields","Metadata","Stats","InfoExtra","StatsExtra","prototype","fields","refresh","setField","o","name","value","updateFiles","files","i","f","j","key","myfile","changed","myfiles","keys","collateTrackers","trackers","t","announces","push","announce","toLowerCase","join","refreshFields","$","trigger","getComment","comment","getCreator","creator","getDateAdded","addedDate","getDateCreated","dateCreated","getDesiredAvailable","desiredAvailable","getDownloadDir","downloadDir","getDownloadSpeed","rateDownload","getDownloadedEver","downloadedEver","getError","error","getErrorString","errorString","getETA","eta","getFailedEver","corruptEver","getFile","getFileCount","length","getHashString","hashString","getHave","getHaveValid","getHaveUnchecked","haveUnchecked","haveValid","getId","id","getLastActivity","activityDate","getLeftUntilDone","leftUntilDone","getMetadataPercentComplete","metadataPercentComplete","getName","getPeers","peers","getPeersConnected","peersConnected","getPeersGettingFromUs","peersGettingFromUs","getPeersSendingToUs","peersSendingToUs","getPieceCount","pieceCount","getPieceSize","pieceSize","getPrivateFlag","isPrivate","getQueuePosition","queuePosition","getRecheckProgress","recheckProgress","getSeedRatioLimit","seedRatioLimit","getSeedRatioMode","seedRatioMode","getSizeWhenDone","sizeWhenDone","getStartDate","startDate","getStatus","status","getTotalSize","totalSize","getTrackers","getUploadSpeed","rateUpload","getUploadRatio","uploadRatio","getUploadedEver","uploadedEver","getWebseedsSendingToUs","webseedsSendingToUs","isFinished","hasExtraInfo","isSeeding","isStopped","isChecking","isDownloading","isDone","needsMetaData","getActivity","getPercentDoneStr","Transmission","fmt","percentString","getPercentDone","percentDone","getStateString","undefined","controller","getErrorMessage","str","getCollatedName","collatedName","getCollatedTrackers","collatedTrackers","testState","state","s","Prefs","_FilterActive","_FilterSeeding","_FilterDownloading","_FilterPaused","_FilterFinished","test","search","tracker","pass","indexOf","compareById","ta","tb","compareByName","localeCompare","compareByQueue","compareByAge","a","b","compareByState","compareByActivity","compareByRatio","compareByProgress","compareBySize","compareTorrents","sortMethod","sortDirection","_SortByActivity","_SortByAge","_SortByQueue","_SortByProgress","_SortBySize","_SortByState","_SortByRatio","_SortDescending","sortTorrents","torrents","sort","reverse"],"mappings":"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","file":"torrent.js","sourcesContent":["/**\n * Copyright © Mnemosyne LLC\n *\n * This file is licensed under the GPLv2.\n * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n */\n\nfunction Torrent(data)\n{\n\tthis.initialize(data);\n}\n\n/***\n****\n****  Constants\n****\n***/\n\n// Torrent.fields.status\nTorrent._StatusStopped         = 0;\nTorrent._StatusCheckWait       = 1;\nTorrent._StatusCheck           = 2;\nTorrent._StatusDownloadWait    = 3;\nTorrent._StatusDownload        = 4;\nTorrent._StatusSeedWait        = 5;\nTorrent._StatusSeed            = 6;\n\n// Torrent.fields.seedRatioMode\nTorrent._RatioUseGlobal        = 0;\nTorrent._RatioUseLocal         = 1;\nTorrent._RatioUnlimited        = 2;\n\n// Torrent.fields.error\nTorrent._ErrNone               = 0;\nTorrent._ErrTrackerWarning     = 1;\nTorrent._ErrTrackerError       = 2;\nTorrent._ErrLocalError         = 3;\n\n// TrackerStats' announceState\nTorrent._TrackerInactive       = 0;\nTorrent._TrackerWaiting        = 1;\nTorrent._TrackerQueued         = 2;\nTorrent._TrackerActive         = 3;\n\n\nTorrent.Fields = { };\n\n// commonly used fields which only need to be loaded once,\n// either on startup or when a magnet finishes downloading its metadata\n// finishes downloading its metadata\nTorrent.Fields.Metadata = [\n\t'addedDate',\n\t'name',\n\t'totalSize'\n];\n\n// commonly used fields which need to be periodically refreshed\nTorrent.Fields.Stats = [\n\t'error',\n\t'errorString',\n\t'eta',\n\t'isFinished',\n\t'isStalled',\n\t'leftUntilDone',\n\t'metadataPercentComplete',\n\t'peersConnected',\n\t'peersGettingFromUs',\n\t'peersSendingToUs',\n\t'percentDone',\n\t'queuePosition',\n\t'rateDownload',\n\t'rateUpload',\n\t'recheckProgress',\n\t'seedRatioMode',\n\t'seedRatioLimit',\n\t'sizeWhenDone',\n\t'status',\n\t'trackers',\n\t'uploadedEver',\n\t'uploadRatio'\n];\n\n// fields used by the inspector which only need to be loaded once\nTorrent.Fields.InfoExtra = [\n\t'comment',\n\t'creator',\n\t'dateCreated',\n\t'files',\n\t'hashString',\n\t'isPrivate',\n\t'pieceCount',\n\t'pieceSize'\n];\n\n// fields used in the inspector which need to be periodically refreshed\nTorrent.Fields.StatsExtra = [\n\t'activityDate',\n\t'corruptEver',\n\t'desiredAvailable',\n\t'downloadDir',\n\t'downloadedEver',\n\t'fileStats',\n\t'haveUnchecked',\n\t'haveValid',\n\t'peers',\n\t'startDate',\n\t'trackerStats',\n\t'webseedsSendingToUs'\n];\n\n/***\n****\n****  Methods\n****\n***/\n\nTorrent.prototype =\n{\n\tinitialize: function(data)\n\t{\n\t\tthis.fields = {};\n\t\tthis.refresh (data);\n\t},\n\n\tsetField: function(o, name, value)\n\t{\n\t\tif (o[name] === value)\n\t\t\treturn false;\n\t\to[name] = value;\n\t\treturn true;\n\t},\n\n\t// fields.files is an array of unions of RPC's \"files\" and \"fileStats\" objects.\n\tupdateFiles: function(files)\n\t{\n\t\tvar changed = false,\n\t\t    myfiles = this.fields.files || [],\n\t\t    keys = [ 'length', 'name', 'bytesCompleted', 'wanted', 'priority' ],\n\t\t    i, f, j, key, myfile;\n\n\t\tfor (i=0; f=files[i]; ++i) {\n\t\t\tmyfile = myfiles[i] || {};\n\t\t\tfor (j=0; key=keys[j]; ++j)\n\t\t\t\tif(key in f)\n\t\t\t\t\tchanged |= this.setField(myfile,key,f[key]);\n\t\t\tmyfiles[i] = myfile;\n\t\t}\n\t\tthis.fields.files = myfiles;\n\t\treturn changed;\n\t},\n\n\tcollateTrackers: function(trackers)\n\t{\n\t\tvar i, t, announces = [];\n\n\t\tfor (i=0; t=trackers[i]; ++i)\n\t\t\tannounces.push(t.announce.toLowerCase());\n\t\treturn announces.join('\\t');\n\t},\n\n\trefreshFields: function(data)\n\t{\n\t\tvar key,\n\t\t    changed = false;\n\n\t\tfor (key in data) {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'files':\n\t\t\t\tcase 'fileStats': // merge files and fileStats together\n\t\t\t\t\tchanged |= this.updateFiles(data[key]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'trackerStats': // 'trackerStats' is a superset of 'trackers'...\n\t\t\t\t\tchanged |= this.setField(this.fields,'trackers',data[key]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'trackers': // ...so only save 'trackers' if we don't have it already\n\t\t\t\t\tif (!(key in this.fields))\n\t\t\t\t\t\tchanged |= this.setField(this.fields,key,data[key]);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tchanged |= this.setField(this.fields,key,data[key]);\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t},\n\n\trefresh: function(data)\n\t{\n\t\tif (this.refreshFields(data))\n\t\t\t$(this).trigger('dataChanged', this);\n\t},\n\n\t/****\n\t*****\n\t****/\n\n\t// simple accessors\n\tgetComment: function() { return this.fields.comment; },\n\tgetCreator: function() { return this.fields.creator; },\n\tgetDateAdded: function() { return this.fields.addedDate; },\n\tgetDateCreated: function() { return this.fields.dateCreated; },\n\tgetDesiredAvailable: function() { return this.fields.desiredAvailable; },\n\tgetDownloadDir: function() { return this.fields.downloadDir; },\n\tgetDownloadSpeed: function() { return this.fields.rateDownload; },\n\tgetDownloadedEver: function() { return this.fields.downloadedEver; },\n\tgetError: function() { return this.fields.error; },\n\tgetErrorString: function() { return this.fields.errorString; },\n\tgetETA: function() { return this.fields.eta; },\n\tgetFailedEver: function(i) { return this.fields.corruptEver; },\n\tgetFile: function(i) { return this.fields.files[i]; },\n\tgetFileCount: function() { return this.fields.files ? this.fields.files.length : 0; },\n\tgetHashString: function() { return this.fields.hashString; },\n\tgetHave: function() { return this.getHaveValid() + this.getHaveUnchecked() },\n\tgetHaveUnchecked: function() { return this.fields.haveUnchecked; },\n\tgetHaveValid: function() { return this.fields.haveValid; },\n\tgetId: function() { return this.fields.id; },\n\tgetLastActivity: function() { return this.fields.activityDate; },\n\tgetLeftUntilDone: function() { return this.fields.leftUntilDone; },\n\tgetMetadataPercentComplete: function() { return this.fields.metadataPercentComplete; },\n\tgetName: function() { return this.fields.name || 'Unknown'; },\n\tgetPeers: function() { return this.fields.peers; },\n\tgetPeersConnected: function() { return this.fields.peersConnected; },\n\tgetPeersGettingFromUs: function() { return this.fields.peersGettingFromUs; },\n\tgetPeersSendingToUs: function() { return this.fields.peersSendingToUs; },\n\tgetPieceCount: function() { return this.fields.pieceCount; },\n\tgetPieceSize: function() { return this.fields.pieceSize; },\n\tgetPrivateFlag: function() { return this.fields.isPrivate; },\n\tgetQueuePosition: function() { return this.fields.queuePosition; },\n\tgetRecheckProgress: function() { return this.fields.recheckProgress; },\n\tgetSeedRatioLimit: function() { return this.fields.seedRatioLimit; },\n\tgetSeedRatioMode: function() { return this.fields.seedRatioMode; },\n\tgetSizeWhenDone: function() { return this.fields.sizeWhenDone; },\n\tgetStartDate: function() { return this.fields.startDate; },\n\tgetStatus: function() { return this.fields.status; },\n\tgetTotalSize: function() { return this.fields.totalSize; },\n\tgetTrackers: function() { return this.fields.trackers; },\n\tgetUploadSpeed: function() { return this.fields.rateUpload; },\n\tgetUploadRatio: function() { return this.fields.uploadRatio; },\n\tgetUploadedEver: function() { return this.fields.uploadedEver; },\n\tgetWebseedsSendingToUs: function() { return this.fields.webseedsSendingToUs; },\n\tisFinished: function() { return this.fields.isFinished; },\n\n\t// derived accessors\n\thasExtraInfo: function() { return 'hashString' in this.fields; },\n\tisSeeding: function() { return this.getStatus() === Torrent._StatusSeed; },\n\tisStopped: function() { return this.getStatus() === Torrent._StatusStopped; },\n\tisChecking: function() { return this.getStatus() === Torrent._StatusCheck; },\n\tisDownloading: function() { return this.getStatus() === Torrent._StatusDownload; },\n\tisDone: function() { return this.getLeftUntilDone() < 1; },\n\tneedsMetaData: function(){ return this.getMetadataPercentComplete() < 1; },\n\tgetActivity: function() { return this.getDownloadSpeed() + this.getUploadSpeed(); },\n\tgetPercentDoneStr: function() { return Transmission.fmt.percentString(100*this.getPercentDone()); },\n\tgetPercentDone: function() { return this.fields.percentDone; },\n\tgetStateString: function() {\n\t\tswitch(this.getStatus()) {\n\t\t\tcase Torrent._StatusStopped:        return this.isFinished() ? '完成做种' : '暂停';\n\t\t\tcase Torrent._StatusCheckWait:      return '排队等待验证';\n\t\t\tcase Torrent._StatusCheck:          return '正在验证本地数据';\n\t\t\tcase Torrent._StatusDownloadWait:   return '排队等待下载';\n\t\t\tcase Torrent._StatusDownload:       return '下载中';\n\t\t\tcase Torrent._StatusSeedWait:       return '排队等待做种';\n\t\t\tcase Torrent._StatusSeed:           return '做种中';\n\t\t\tcase null:\n\t\t\tcase undefined:                     return '未知';\n\t\t\tdefault:                            return '错误';\n\t\t}\n\t},\n\tseedRatioLimit: function(controller){\n\t\tswitch(this.getSeedRatioMode()) {\n\t\t\tcase Torrent._RatioUseGlobal: return controller.seedRatioLimit();\n\t\t\tcase Torrent._RatioUseLocal:  return this.getSeedRatioLimit();\n\t\t\tdefault:                      return -1;\n\t\t}\n\t},\n\tgetErrorMessage: function() {\n\t\tdebugger;\n\t\tvar str = this.getErrorString();\n\t\tswitch(this.getError()) {\n\t\t\tcase Torrent._ErrTrackerWarning:\n\t\t\t\treturn 'Tracker 返回了一个警告: ' + str;\n\t\t\tcase Torrent._ErrTrackerError:\n\t\t\t\treturn 'Tracker 返回了一个错误: ' + str;\n\t\t\tcase Torrent._ErrLocalError:\n\t\t\t\treturn '错误: ' + str;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t},\n\tgetCollatedName: function() {\n\t\tvar f = this.fields;\n\t\tif (!f.collatedName && f.name)\n\t\t\tf.collatedName = f.name.toLowerCase();\n\t\treturn f.collatedName || '';\n\t},\n\tgetCollatedTrackers: function() {\n\t\tvar f = this.fields;\n\t\tif (!f.collatedTrackers && f.trackers)\n\t\t\tf.collatedTrackers = this.collateTrackers(f.trackers);\n\t\treturn f.collatedTrackers || '';\n\t},\n\n\t/****\n\t*****\n\t****/\n\n\ttestState: function(state)\n\t{\n\t\tvar s = this.getStatus();\n\n\t\tswitch(state)\n\t\t{\n\t\t\tcase Prefs._FilterActive:\n\t\t\t\treturn this.getPeersGettingFromUs() > 0\n\t\t\t\t    || this.getPeersSendingToUs() > 0\n\t\t\t\t    || this.getWebseedsSendingToUs() > 0\n\t\t\t\t    || this.isChecking();\n\t\t\tcase Prefs._FilterSeeding:\n\t\t\t\treturn (s === Torrent._StatusSeed)\n\t\t\t\t    || (s === Torrent._StatusSeedWait);\n\t\t\tcase Prefs._FilterDownloading:\n\t\t\t\treturn (s === Torrent._StatusDownload)\n\t\t\t\t    || (s === Torrent._StatusDownloadWait);\n\t\t\tcase Prefs._FilterPaused:\n\t\t\t\treturn this.isStopped();\n\t\t\tcase Prefs._FilterFinished:\n\t\t\t\treturn this.isFinished();\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n\t * @param filter one of Prefs._Filter*\n\t * @param search substring to look for, or null\n\t * @return true if it passes the test, false if it fails\n\t */\n\ttest: function(state, search, tracker)\n\t{\n\t\t// flter by state...\n\t\tvar pass = this.testState(state);\n\n\t\t// maybe filter by text...\n\t\tif (pass && search && search.length)\n\t\t\tpass = this.getCollatedName().indexOf(search.toLowerCase()) !== -1;\n\n\t\t// maybe filter by tracker...\n\t\tif (pass && tracker && tracker.length)\n\t\t\tpass = this.getCollatedTrackers().indexOf(tracker) !== -1;\n\n\t\treturn pass;\n\t}\n};\n\n\n/***\n****\n****  SORTING\n****\n***/\n\nTorrent.compareById = function(ta, tb)\n{\n\treturn ta.getId() - tb.getId();\n};\nTorrent.compareByName = function(ta, tb)\n{\n\treturn ta.getCollatedName().localeCompare(tb.getCollatedName())\n\t    || Torrent.compareById(ta, tb);\n};\nTorrent.compareByQueue = function(ta, tb)\n{\n\treturn ta.getQueuePosition() - tb.getQueuePosition();\n};\nTorrent.compareByAge = function(ta, tb)\n{\n\tvar a = ta.getDateAdded(),\n\t    b = tb.getDateAdded();\n\n\treturn (b - a) || Torrent.compareByQueue(ta, tb);\n};\nTorrent.compareByState = function(ta, tb)\n{\n\tvar a = ta.getStatus(),\n\t    b = tb.getStatus();\n\n\treturn (b - a) || Torrent.compareByQueue(ta, tb);\n};\nTorrent.compareByActivity = function(ta, tb)\n{\n\tvar a = ta.getActivity(),\n\t    b = tb.getActivity();\n\n\treturn (b - a) || Torrent.compareByState(ta, tb);\n};\nTorrent.compareByRatio = function(ta, tb)\n{\n\tvar a = ta.getUploadRatio(),\n\t    b = tb.getUploadRatio();\n\n\tif (a < b) return 1;\n\tif (a > b) return -1;\n\treturn Torrent.compareByState(ta, tb);\n};\nTorrent.compareByProgress = function(ta, tb)\n{\n\tvar a = ta.getPercentDone(),\n\t    b = tb.getPercentDone();\n\n\treturn (a - b) || Torrent.compareByRatio(ta, tb);\n};\n\nTorrent.compareBySize = function(ta, tb)\n{\n    var a = ta.getTotalSize(),\n        b = tb.getTotalSize();\n\n    return (a - b) || Torrent.compareByName(ta, tb);\n}\n\nTorrent.compareTorrents = function(a, b, sortMethod, sortDirection)\n{\n\tvar i;\n\n\tswitch(sortMethod)\n\t{\n\t\tcase Prefs._SortByActivity:\n\t\t\ti = Torrent.compareByActivity(a,b);\n\t\t\tbreak;\n\t\tcase Prefs._SortByAge:\n\t\t\ti = Torrent.compareByAge(a,b);\n\t\t\tbreak;\n\t\tcase Prefs._SortByQueue:\n\t\t\ti = Torrent.compareByQueue(a,b);\n\t\t\tbreak;\n\t\tcase Prefs._SortByProgress:\n\t\t\ti = Torrent.compareByProgress(a,b);\n\t\t\tbreak;\n        case Prefs._SortBySize:\n            i = Torrent.compareBySize(a,b);\n            break;\n\t\tcase Prefs._SortByState:\n\t\t\ti = Torrent.compareByState(a,b);\n\t\t\tbreak;\n\t\tcase Prefs._SortByRatio:\n\t\t\ti = Torrent.compareByRatio(a,b);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ti = Torrent.compareByName(a,b);\n\t\t\tbreak;\n\t}\n\n\tif (sortDirection === Prefs._SortDescending)\n\t\ti = -i;\n\n\treturn i;\n};\n\n/**\n * @param torrents an array of Torrent objects\n * @param sortMethod one of Prefs._SortBy*\n * @param sortDirection Prefs._SortAscending or Prefs._SortDescending\n */\nTorrent.sortTorrents = function(torrents, sortMethod, sortDirection)\n{\n\tswitch(sortMethod)\n\t{\n\t\tcase Prefs._SortByActivity:\n\t\t\ttorrents.sort(this.compareByActivity);\n\t\t\tbreak;\n\t\tcase Prefs._SortByAge:\n\t\t\ttorrents.sort(this.compareByAge);\n\t\t\tbreak;\n\t\tcase Prefs._SortByQueue:\n\t\t\ttorrents.sort(this.compareByQueue);\n\t\t\tbreak;\n\t\tcase Prefs._SortByProgress:\n\t\t\ttorrents.sort(this.compareByProgress);\n\t\t\tbreak;\n        case Prefs._SortBySize:\n            torrents.sort(this.compareBySize);\n            break;\n\t\tcase Prefs._SortByState:\n\t\t\ttorrents.sort(this.compareByState);\n\t\t\tbreak;\n\t\tcase Prefs._SortByRatio:\n\t\t\ttorrents.sort(this.compareByRatio);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttorrents.sort(this.compareByName);\n\t\t\tbreak;\n\t}\n\n\tif (sortDirection === Prefs._SortDescending)\n\t\ttorrents.reverse();\n\n\treturn torrents;\n};\n"],"sourceRoot":"/source/"}